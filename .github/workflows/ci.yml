name: CI – Full Build, Test & Report

on:
  pull_request_target:
    branches:
      - dev

permissions:
  contents: read
  issues: write

jobs:
  build-test-report:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout PR code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Build client
      - name: 🐳 Build client Docker image
        id: client_build
        continue-on-error: true
        run: |
          set +e
          docker build -f client/Dockerfile -t client-check client/ > client_build.log 2>&1
          EXIT_CODE=$?
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

      # Build server
      - name: 🐳 Build server Docker image
        id: server_build
        continue-on-error: true
        run: |
          set +e
          docker build -f server/Dockerfile -t server-check server/ > server_build.log 2>&1
          EXIT_CODE=$?
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

      # Create issue if any build failed
      - name: 🚨 Create issue on build/test failure
        if: ${{ steps.client_build.outputs.exit_code != '0' || steps.server_build.outputs.exit_code != '0' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const prNumber = context.payload.pull_request.number;
            const { owner, repo } = context.repo;
            const clientExit = ${{ steps.client_build.outputs.exit_code }};
            const serverExit = ${{ steps.server_build.outputs.exit_code }};
            const clientLog = fs.readFileSync('client_build.log', 'utf8');
            const serverLog = fs.readFileSync('server_build.log', 'utf8');

            const body = `
            ## 🚨 CI Failed on PR #${prNumber}

            ### 🔧 Client Build Log
            \`\`\`
            ${clientLog}
            \`\`\`

            ### 🔧 Server Build Log
            \`\`\`
            ${serverLog}
            \`\`\`
            `;

            await github.rest.issues.create({
              owner,
              repo,
              title: `❌ CI Failed on PR #${prNumber}`,
              body,
              labels: ['ci', 'build-failure']
            });
